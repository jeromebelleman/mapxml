#! /usr/bin/env python

'''
Make KML map canonical
'''

import sys
reload(sys)
sys.setdefaultencoding('UTF8')
import os
import argparse
import subprocess
import tempfile
import xml.etree.ElementTree
import xml.sax.saxutils
import zipfile
import re

RESPACE = re.compile('^(?P<space>{[^}]+})?')

def printplacemarks(tmp, fhl):
    '''
    Print placemarks
    '''

    tree = xml.etree.ElementTree.parse(fhl)
    space = RESPACE.match(tree.getroot().tag).group('space')
    space = space if space else ''

    docname = tree.find('%sDocument/%sname' % (space, space)).text
    print >> tmp, '  <name>%s</name>' % xml.sax.saxutils.escape(docname)

    placemarks = []
    for placemark in tree.findall('.//%sPlacemark' % space):
        name = placemark.find('%sname' % space).text
        coord = placemark.find('%sPoint/%scoordinates' % (space, space)).text
        placemarks.append((xml.sax.saxutils.escape(name),
                          ','.join(coord.strip().split(',')[:2])))

    for name, coord in sorted(placemarks):
        print >> tmp, '  <Placemark>'
        print >> tmp, '   <name>%s</name>' % name
        print >> tmp, '   <Point><coordinates>%s</coordinates></Point>' % coord
        print >> tmp, '  </Placemark>'

def main():
    '''
    Parse arguments
    '''

    parser = argparse.ArgumentParser(
        description="Make KML map canonical and compare them.")
    parser.add_argument('mapfile0')
    parser.add_argument('mapfile1')
    args = parser.parse_args()

    mapxmldir = os.path.expanduser('~/.mapxml')
    tmpdir = mapxmldir + '/tmp'
    try:
        os.makedirs(tmpdir)
    except OSError:
        pass

    tmps = []
    tmps.append(tempfile.NamedTemporaryFile(dir=tmpdir))
    tmps.append(tempfile.NamedTemporaryFile(dir=tmpdir))
    for i, mapfile in enumerate((args.mapfile0, args.mapfile1)):

        if mapfile.endswith('.kmz'):
            zfl = zipfile.ZipFile(mapfile)
            for member in zfl.namelist():
                if member.endswith('.kml'):
                    fhl = zfl.open(member)
        else:
            fhl = open(mapfile)

        print >> tmps[i], '<?xml version="1.0" encoding="UTF-8"?>'
        print >> tmps[i], '<kml>'
        print >> tmps[i], ' <Document>'
        printplacemarks(tmps[i], fhl)
        print >> tmps[i], ' </Document>'
        print >> tmps[i], '</kml>'
        tmps[i].flush()

    subprocess.call(['vimdiff'] + [tmp.name for tmp in tmps])

if __name__ == '__main__':
    sys.exit(main())
