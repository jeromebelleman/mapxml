#! /usr/bin/env python

'''
Make KML map canonical
'''

import sys
import argparse
import xml.etree.ElementTree
import zipfile

def printplacemarks(kml):
    '''
    Print placemarks
    '''

    tree = xml.etree.ElementTree.parse(kml)
    space = tree.getroot().tag.split('}')[0] + '}'

    placemarks = []
    for placemark in tree.findall('.//%sPlacemark' % space):
        name = placemark.find('%sname' % space).text
        coord = placemark.find('%sPoint/%scoordinates' % (space, space)).text
        placemarks.append((name, coord))

    for name, coord in sorted(placemarks):
        print '  <Placemark>'
        print '   <name>%s</name>' % name
        print '   <Point><coordinates>%s</coordinates></Point>' % coord
        print '  </Placemark>'

def main():
    '''
    Parse arguments
    '''

    parser = argparse.ArgumentParser(description="Make KML map canonical.")
    parser.add_argument('kmz0')
    parser.add_argument('kmz1')
    args = parser.parse_args()

    for kmz in args.kmz0, args.kmz1:
        zfl = zipfile.ZipFile(kmz)
        for member in zfl.namelist():
            if member.endswith('.kml'):
                print '<?xml version="1.0" encoding="UTF-8"?>'
                print '<kml>'
                print ' <Document>'
                printplacemarks(zfl.open(member))
                print ' </Document>'
                print '</kml>'
                break

if __name__ == '__main__':
    sys.exit(main())
