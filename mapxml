#! /usr/bin/env python

import sys
import os
import argparse
import xml.etree.ElementTree
import zipfile
import yaml

def rmelms(tree, tag):
    for elm in tree.findall('.//%s/..' % tag):
        for subelm in list(elm.getchildren()):
            if subelm.tag == tag:
                elm.remove(subelm)

def fixxml(cfg, kml):
    tree = xml.etree.ElementTree.parse(kml)
    space = tree.getroot().tag.split('}')[0] + '}'

    for rmv in cfg['remove']:
        rmelms(tree, '%s%s' % (space, rmv))
    tree.write(sys.stdout)

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('kmz0')
    parser.add_argument('kmz1')
    args = parser.parse_args()

    with open(os.path.expanduser('~/.mapxml/config.yaml')) as fhl:
        cfg = yaml.load(fhl)

    for kmz in args.kmz0, args.kmz1:
        zfl = zipfile.ZipFile(kmz)
        for member in zfl.namelist():
            if member.endswith('.kml'):
                fixxml(cfg, zfl.open(member))
                break

if __name__ == '__main__':
    sys.exit(main())
